            cosmic_event = np.expand_dims(cosmic_event, axis=0)
        
        probs = self.model.predict(cosmic_event)
        return np.argmax(probs), np.max(probs)
    
    def explain_prediction(self, cosmic_event):
        """Genera explicación cuántica de la predicción"""
        grad_model = tf.keras.models.Model(
            inputs=self.model.inputs,
            outputs=[self.model.output, 
                    self.model.get_layer('cosmic_attention').output]
        )
        
        with tf.GradientTape() as tape:
            preds, attention = grad_model(cosmic_event)
            top_class = preds[:, np.argmax(preds)]
            
        grads = tape.gradient(top_class, attention)
        return grads.numpy()
